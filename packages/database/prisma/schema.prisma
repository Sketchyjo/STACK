// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  username        String    @unique
  firstName       String
  lastName        String
  avatar          String?
  isEmailVerified Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relations
  portfolios    Portfolio[]
  investments   Investment[]
  transactions  Transaction[]

  @@map("users")
}

model Portfolio {
  id          String   @id @default(cuid())
  userId      String
  name        String
  description String?
  totalValue  Decimal  @default(0)
  currency    Currency @default(USD)
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  investments Investment[]

  @@map("portfolios")
}

model Investment {
  id          String           @id @default(cuid())
  userId      String
  portfolioId String?
  amount      Decimal
  currency    Currency
  type        InvestmentType
  status      InvestmentStatus @default(PENDING)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  // Relations
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  portfolio Portfolio? @relation(fields: [portfolioId], references: [id], onDelete: SetNull)

  @@map("investments")
}

model Transaction {
  id          String            @id @default(cuid())
  userId      String
  type        TransactionType
  amount      Decimal
  currency    Currency
  status      TransactionStatus @default(PENDING)
  description String?
  metadata    Json?
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

// Enums
enum Currency {
  USD
  EUR
  BTC
  ETH
}

enum InvestmentType {
  EQUITY
  CRYPTO
  BOND
  REAL_ESTATE
}

enum InvestmentStatus {
  PENDING
  ACTIVE
  COMPLETED
  CANCELLED
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
  INVESTMENT
  DIVIDEND
  FEE
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}